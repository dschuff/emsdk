# When a release commit created by create-release.yml is landed, create the
# corresponding tag.
name: Create release tag

on:
  push:
    paths: [ emscripten-releases-tags.json, .github/workflows/tag-release.yml ]
    # TODO: restrict to main branch
  workflow_dispatch:

jobs:
  tag-release:
    # Only activate for commits created by the create-release.yml workflow.
    # The assumption is that when manual changes happen, we want to handle
    # tagging manually too.
    name: Check for release commit and create tag
    runs-on: ubuntu-latest
    outputs:
      is_release:
    steps:
      - name: Match message and create tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TEST_TOKEN }}
          script: |
            const message = 'Release 1.1.2' //`${{ github.event.head_commit.message }}`
            const regex = /Release ([0-9]+.[0-9]+.[0-9]+)/
            const match = message.match(regex)
            if (match) {
              const release = match[1]
              console.log(`Matched release ${release}`)
              try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${release}`,
                sha: context.sha
              })
              } catch (e) { console.log(`createRef failed: ${e}`) }
            } else {
              console.log(`Commit message: ${message} did not match pattern`)
              }

  dispatch-emscripten-tag:
    name: Dispatch workflow to tag emscripten repo
    runs-on: ubuntu-latest
    needs: tag-release
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Find emscripten revision
        run: python3 scripts/get_emscripten_revision_info.py
      - name: Dispatch emscripten workflow
        uses: actions/github-script@v7 # TODO: make conditional on regex match
        with:
          github-token: ${{ secrets.TEST_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'emscripten',
              workflow_id: 'tag-release.yml',
              ref: 'main',
              inputs: { 'release-sha': '${{ env.EMSCRIPTEN_HASH }}' }
            })
